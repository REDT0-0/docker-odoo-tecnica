#!/bin/bash

# üõ°Ô∏è Validaci√≥n y parsing de argumentos
for arg in "$@"; do
  case $arg in
    --odoo_container=*)
      ODOO_CONTAINER="${arg#*=}"
      shift
      ;;
    --test_tags=*)
      TEST_TAGS="${arg#*=}"
      shift
      ;;
    --modules=*)
      MODULES="${arg#*=}"
      shift
      ;;
    --db_name=*)
      DB_NAME="${arg#*=}"
      shift
      ;;
    *)
      echo "‚ùå Argumento desconocido: $arg"
      echo "Uso: ./run_coverage.sh --odoo_container=... --test_tags=... --modules=... --db_name=..."
      exit 1
      ;;
  esac
done

# ‚úÖ Verificaci√≥n de argumentos obligatorios
if [[ -z "$ODOO_CONTAINER" || -z "$TEST_TAGS" || -z "$MODULES" || -z "$DB_NAME" ]]; then
  echo "‚ùå Faltan argumentos obligatorios."
  echo "Uso: ./run_coverage.sh --odoo_container=... --test_tags=... --modules=... --db_name=..."
  exit 1
fi

# üß† Construir rutas para --source
IFS=',' read -ra MOD_ARRAY <<< "$MODULES"
SOURCE_PATHS=""
for mod in "${MOD_ARRAY[@]}"; do
  SOURCE_PATHS+="/home/odoo/src/custom/$mod,"
done
SOURCE_PATHS=${SOURCE_PATHS::-1}  # Eliminar √∫ltima coma

echo "‚úÖ Rutas de origen para coverage: $SOURCE_PATHS"
echo ""

echo "
    1. Sino sabes el nombre del contenedor, puedes encontrarlo ejecutando 'docker ps' en tu terminal. Recuerda que debe ser el que tenga en la columna service la palabra "Odoo".
    2. Aseg√∫rate de que el contenedor est√© en ejecuci√≥n antes de ejecutar este script.
    3. En el argumento --modules recuerda colocar el nombre de la carpeta del proyecto seguido del nombre del modulo, puedes agregar mas de un directorio separado por coma.

    Ejemplo: --modules=devops-secure-test-integra-a/tests_module_cicd,binaural/tests_module_cicd


    3. El comando va a ejecutar el script habitual para ejecutar las pruebas: 

    odoo --test-tags="" -i MODULES --without-demo=True --stop-after-init -d 

    Junto el comando para analizar la cobertura de c√≥digo:

    coverage run y coverage report -m
"

# üöÄ Ejecutar Coverage dentro del contenedor
docker exec -u root -it "$ODOO_CONTAINER" bash -c "
  pip3 install coverage >/dev/null 2>&1 &&
  coverage erase &&
  coverage run --source=$SOURCE_PATHS /usr/bin/odoo \
    --test-tags=$TEST_TAGS \
    -i $MODULES \
    --without-demo=True \
    --stop-after-init \
    -d $DB_NAME \
    --log-level=test \
    --log-handler=odoo.tests:DEBUG \
    -p 9999 &&
  coverage report -m
"

echo ""
echo ""
echo ""
echo '‚úÖ Los resultados del reporte est√°n listos. Ahora manualmente ve a la tarea relacionada he ingresa el valor total del porcentaje de cobertura.'
echo ""
echo ""
echo ""
